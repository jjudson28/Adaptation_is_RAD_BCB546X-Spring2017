pb=b/tot  #calculates the probability of a birth event
N=c(N0)
tFact=0.1
Tm=c(1/N0)
for(i in 1:events){
if(N[i]==0) {         # if previous population size was zero make new pop size zero and go to next event
N=c(N,0)
} else if (runif(1)<pb) {  # obtain a random number evenly distributed in [0,1] and test pb against it
N=c(N, N[i]+1)      # add a birth event if random number < pb
} else {
N=c(N, N[i]-1)     # add a death event if random number >= pb
}
if(N[i]==0){
Tm=c(Tm,Tm[i])
break
} else {
NT=Tm[i]+(1/N[i])
Tm=c(Tm,NT)
}
}
return (data.frame(Tm,N))   # return a vector containing all events
}
demStochSimsTadj=function(reps=1,events=10,N0=10,b=0.6,d=0.5){
pb=b/(b+d)
extinctions=0
#  myYmax=N0+(events*pb-events*(1-pb))*2
maxT=0
maxN=0
for(i in 1:10){
temp=demStochTadj(events=events,N0=N0,b=b,d=d)
tT=temp$Tm[length(temp$Tm)]
tN=temp$N[length(temp$N)]
if(tT>maxT)maxT=tT
if(tN>maxN)maxN=tN
}
if(maxN<50)maxN=200
for(i in 1:reps){
temp=demStochTadj(events=events,N0=N0,b=b,d=d)
if(temp$N[length(temp$N)]==0)extinctions=extinctions+1
# if(temp[events]==0)extinctions=extinctions+1
if(i==1){
plot(temp$Tm,temp$N,type="l",ylim=c(-10,maxN),xlim=c(0,maxT),ylab="Population Size",xlab="Time")
} else {
lines(temp$Tm,temp$N)
}
}
abline(N0,0,col="red",xlim=c(0,maxT), lwd=2)
curve(N0*exp((2*pb-1)*x),xlim=c(0,maxT),add=TRUE,col="red", lwd=4)
extProb=extinctions/reps
lab=sprintf("%4.4f",pb)
text(x=3,y=maxN-1/10*maxN,pos=4,paste("Prob(extinct)=",extProb,"\nN0=",N0,"\nP(birth)=",lab),col="red",font=2)
# text(x=3,y=maxN,pos=4,paste("Prob(extinct)=",extProb),col="blue")
return (extProb)
}
get.packages(ape)
?get.packages
??get.packages
?package
install.packages(ape)
"ape"
install.packages(ape)
install.packages("APE")
install.packages("ape")
?ape
library(ape)
?ape
library(ggplot2)
library(ggmap)
install.packages("ggmap")
library(ggmap)
library(ggplot2)
library(ggmap)
lon <- c(-61.4472)
lat <- c(15.450319)
df <- as.data.frame(cbind(lon,lat))
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 4,
maptype = "satellite", scale = 2)
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 8,
maptype = "satellite", scale = 2)
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
?ggmap
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 11,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10.5,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10.3,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10.1,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat, fill = "red", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(fill = "red", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
?ggmap
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "terrain", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(fill = "red", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(fill = "green", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat, fill = "green", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
?fill
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat, colour = "green", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat, colour = "green", fill="black", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
# getting the map
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat, fill="black", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE)
?guides
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat, fill="black", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE) + scale_x_continuous(limits = c(-61.6, -61.0), expand = c(0, 0)) +
scale_y_continuous(limits = c(15.1, 15.7), expand = c(0, 0))
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat, fill="black", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE) + scale_x_continuous(limits = c(-61.6, -61.1), expand = c(0, 0)) +
scale_y_continuous(limits = c(15.1, 15.7), expand = c(0, 0))
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat, fill="black", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE) + scale_x_continuous(limits = c(-61.6, -61.15), expand = c(0, 0)) +
scale_y_continuous(limits = c(15.15, 15.7), expand = c(0, 0))
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat, color="red", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE) + scale_x_continuous(limits = c(-61.6, -61.15), expand = c(0, 0)) +
scale_y_continuous(limits = c(15.15, 15.7), expand = c(0, 0))
?fill
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat, fill="black", color="red", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE) + scale_x_continuous(limits = c(-61.6, -61.15), expand = c(0, 0)) +
scale_y_continuous(limits = c(15.15, 15.7), expand = c(0, 0))
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat, fill="black", alpha = 0.8), size = 5, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE) + scale_x_continuous(limits = c(-61.6, -61.15), expand = c(0, 0)) +
scale_y_continuous(limits = c(15.15, 15.7), expand = c(0, 0))
# getting the map
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat, fill="black", alpha = 0.8), size = 6, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE) + scale_x_continuous(limits = c(-61.6, -61.15), expand = c(0, 0)) +
scale_y_continuous(limits = c(15.15, 15.7), expand = c(0, 0))
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat, fill="black"), size = 6, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE) + scale_x_continuous(limits = c(-61.6, -61.15), expand = c(0, 0)) +
scale_y_continuous(limits = c(15.15, 15.7), expand = c(0, 0))
# getting the map
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat), color="black", size = 6, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE) + scale_x_continuous(limits = c(-61.6, -61.15), expand = c(0, 0)) +
scale_y_continuous(limits = c(15.15, 15.7), expand = c(0, 0))
# getting the map
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat), color="yellow", size = 6, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE) + scale_x_continuous(limits = c(-61.6, -61.15), expand = c(0, 0)) +
scale_y_continuous(limits = c(15.15, 15.7), expand = c(0, 0))
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat), color="yellow", size = 7, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE) + scale_x_continuous(limits = c(-61.6, -61.15), expand = c(0, 0)) +
scale_y_continuous(limits = c(15.15, 15.7), expand = c(0, 0))
read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2013lines.csv', header = T, stringsAsFactors = F)
nfl <- rbind(nfl2013,nfl2012,nfl2011,nfl2010,nfl2009,nfl2008,nfl2007,nfl2006,nfl2005,nfl2004,nfl2003,nfl2002,nfl2001)
nfl2013 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2013lines.csv', header = T, stringsAsFactors = F)
nfl2012 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2012lines.csv', header = T, stringsAsFactors = F)
nfl2011 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2011lines.csv', header = T, stringsAsFactors = F)
nfl2010 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2010lines.csv', header = T, stringsAsFactors = F)
nfl2009 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2009lines.csv', header = T, stringsAsFactors = F)
nfl2008 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2008lines.csv', header = T, stringsAsFactors = F)
nfl2007 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2007lines.csv', header = T, stringsAsFactors = F)
nfl2006 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2006lines.csv', header = T, stringsAsFactors = F)
nfl2005 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2005lines.csv', header = T, stringsAsFactors = F)
nfl2004 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2004lines.csv', header = T, stringsAsFactors = F)
nfl2003 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2003lines.csv', header = T, stringsAsFactors = F)
nfl2002 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2002lines.csv', header = T, stringsAsFactors = F)
nfl2001 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2001lines.csv', header = T, stringsAsFactors = F)
nfl <- rbind(nfl2013,nfl2012,nfl2011,nfl2010,nfl2009,nfl2008,nfl2007,nfl2006,nfl2005,nfl2004,nfl2003,nfl2002,nfl2001)
rm(nfl2013,nfl2012,nfl2011,nfl2010,nfl2009,nfl2008,nfl2007,nfl2006,nfl2005,nfl2004,nfl2003,nfl2002,nfl2001)
View(nfl)
summary(nfl)
nfl$result <- nfl$Home.Score - nfl$Visitor.Score
summary(nfl$result)
View(nfl)
library(data.table)
install.packages('datatable')
install.packages('data.table')
library(data.table)
nfl$year <- year(nfl$Date)
nfl$Date <- as.Date(nfl$Date)
nfl$year <- year(nfl$Date)
nfl$key <- 1:nrow(nfl)
View(nfl)
rm(list = ls())
library(data.table)
nfl2013 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2013lines.csv', header = T, stringsAsFactors = F)
nfl2012 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2012lines.csv', header = T, stringsAsFactors = F)
nfl2011 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2011lines.csv', header = T, stringsAsFactors = F)
nfl2010 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2010lines.csv', header = T, stringsAsFactors = F)
nfl2009 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2009lines.csv', header = T, stringsAsFactors = F)
nfl2008 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2008lines.csv', header = T, stringsAsFactors = F)
nfl2007 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2007lines.csv', header = T, stringsAsFactors = F)
nfl2006 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2006lines.csv', header = T, stringsAsFactors = F)
nfl2005 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2005lines.csv', header = T, stringsAsFactors = F)
nfl2004 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2004lines.csv', header = T, stringsAsFactors = F)
nfl2003 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2003lines.csv', header = T, stringsAsFactors = F)
nfl2002 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2002lines.csv', header = T, stringsAsFactors = F)
nfl2001 <- read.csv('/Users/jessicajudson/Desktop/Matt/nfllines/nfl2001lines.csv', header = T, stringsAsFactors = F)
nfl <- rbind(nfl2013,nfl2012,nfl2011,nfl2010,nfl2009,nfl2008,nfl2007,nfl2006,nfl2005,nfl2004,nfl2003,nfl2002,nfl2001)
rm(nfl2013,nfl2012,nfl2011,nfl2010,nfl2009,nfl2008,nfl2007,nfl2006,nfl2005,nfl2004,nfl2003,nfl2002,nfl2001)
summary(nfl)
nfl$result <- nfl$Home.Score - nfl$Visitor.Score
nfl$Date <- as.Date(nfl$Date,format = '%m/%d/%Y')
nfl$year <- year(nfl$Date)
nfl$key <- 1:nrow(nfl)
summary(nfl)
View(nfl)
as.Date('2005-10-01')
as.Date('2005-10-01') - as.Date('2005-10-15')
(as.Date('2005-10-01') - as.Date('2005-10-'))/365
as.numeric(as.Date('2005-10-01') - as.Date('2005-10-'))/365
as.numeric(as.Date('2005-10-01') - as.Date('2005-10-15'))/365
(as.Date('2005-10-01') - as.Date('2005-10-15'))/365
firstDate <- as.data.table(nfl[,c('year','Date')])[,lapply(.SD,min)]
View(firstDate)
firstDate <- as.data.table(nfl[,c('year','Date')])[,lapply(.SD,min), by = 'year']
View(firstDate)
month(nfl$Date)
firstDate <- as.data.table(nfl[month(nfl$Date) != 1,c('year','Date')])[,lapply(.SD,min), by = 'year']
View(firstDate)
getWeek <- join(nfl[,c('key','year','Date')],firstDate,by = 'year')
library(dplyr)
install.packages('dplyr')
library(dplyr)
getWeek <- join(nfl[,c('key','year','Date')],firstDate,by = 'year')
?join
getWeek <- join(nfl[,c('key','year','Date')],firstDate,by = 'year')
getWeek <- dplyr::join(nfl[,c('key','year','Date')],firstDate,by = 'year')
getWeek <- join(nfl[,c('key','year','Date')],firstDate,by = 'year')
?join
library(plyr)
getWeek <- join(nfl[,c('key','year','Date')],firstDate,by = 'year')
View(getWeek)
View(getWeek)
?setnames
setnames(firstDate,'Date','firstDate')
getWeek <- join(nfl[,c('key','year','Date')],firstDate,by = 'year')
getWeek$week <- floor(as.numeric(getWeek$Date - getWeek$firstDate)/7 + 1)
View(getWeek)
summary(getWeek$week)
getWeek$firstDate[getWeek$firstDate < 1] <- 17
getWeek$week[getWeek$week < 1] <- 17
count(nfl$week)
count(getWeek$week)
nfl <- join(nfl,getWeek[,c('key','week')],by = 'key')
View(nfl)
# loading the required packages
library(ggplot2)
library(ggmap)
# creating a sample data.frame with your lat/lon points
lon <- c(-61.4472)
lat <- c(15.450319)
df <- as.data.frame(cbind(lon,lat))
# getting the map
mapjess <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 10,
maptype = "satellite", scale = 2)
# plotting the map with some points on it
ggmap(mapjess) +
geom_point(data = df, aes(x = lon, y = lat), color="yellow", size = 7, shape = 21) +
guides(fill=FALSE, alpha=FALSE, size=FALSE) + scale_x_continuous(limits = c(-61.6, -61.15), expand = c(0, 0)) +
scale_y_continuous(limits = c(15.15, 15.7), expand = c(0, 0))
1+1
5^3
7*(8-2)
1==1
x<-5/10
x
x <- 1:100
x*2
2^x
x <- c(1,2,3,4,5)
y <- c(1,2,3)
x+y
x + y
ls()
rm(list <- ls())
rm(list = ls())
?ls
install.packages("ggplot2")
library(ggplot2)
load("~/EEB546X_RProject/EEB546X_RProject.Rproj")
cars
library(plyr)
a <- ddply(cars,"speed",sum)
View(a)
cars[order(cars$speed),]
View(a)
a <- ddply(cars,"speed",+)
a <- ddply(cars,"speed","+")
View(a)
a <- ddply(cars,"speed",sum)
View(a)
?ddply
a <- ddply(cars,speed,sum)
a <- ddply(cars,"speed",sum)
View(a)
View(cars)
str(cars)
sum(1,2)
sum(4,5)
sum(2,10)
b <- ddply(cars,'speed',product)
b <- ddply(cars,'speed',mean)
View(b)
a <- ddply(cars,"speed","sum")
View(a)
a <- as.data.table(cars)[,lapply(.SD,sum),by = 'speed']
library(data.table)
a <- as.data.table(cars)[,lapply(.SD,sum),by = 'speed']
View(a)
a <- ddply(cars,"speed",sum)
View(a)
a <- as.data.table(cars)[,lapply(.SD,sum),by = 'speed']
View(a)
library(plyr)
a <- as.data.table(cars)[,lapply(.SD,sum),by = 'speed']
View(a)
View(cars)
a <- ddply(cars,.(speed),sum)
View(a)
a <- ddply(cars,.(speed),summarize)
a <- ddply(cars,.(speed),mean)
a <- ddply(cars,.speed,mean)
a <- ddply(cars,.(speed),mean)
a <- ddply(cars,.(speed),diff)
a <- ddply(cars,.(speed),prod)
View(a)
a <- ddply(cars,.(dist),sum)
View(a)
a <- ddply(cars,.(speed),sum)
View(a)
cars2 <- cars
cars2$speed <- as.factor(cars2$speed)
a <- ddply(cars2,"speed",sum)
a <- as.data.table(cars)[,lapply(.SD,sum),by = 'speed']
View(a)
source("http://bioconductor.org/biocLite.R")
biocLite()
library(IRanges)
rng <- IRanges(start=4, end=13)
rng
rng2 <- IRanges(start=4, width=3)
rng2
x <- IRanges(start=c(4, 7, 2, 20), end=c(13, 7, 5, 23))
x
names(x) <- letters[1:4]
x
class(x)
width(x)
start(x)
end(x)
end(x)
end(x) <- end(x)+4
end(x)
x
range(x)
x[2:3]
start(x) < 5
x[start(x) < 5]
x[width(x) > 8]
a <- IRanges(start=7, width=4)
a
b <- IRanges(start=2, end=5)
b
c <- c(a, b)
c
class(c)
x <- IRanges(start=c(40, 80), end=c(67, 114))
x
x + 4L
x - 10L
y <- IRanges(start=c(4, 6, 10, 12), width=13)
y
restrict(y, 5, 10)
x
flank(x, width=7)
flank(x, width=7, start=FALSE) #can specify forward versus revers
promoters <- flank(x, width=20)
promoters
install.packages(genepopedit)
if (!require("devtools")) install.packages("devtools")
devtools::install_github("rystanley/genepopedit")
library(genepopedit)
getwd()
setwd("~/Desktop/ClassProject")
getwd()
genepop_structure(genepop="allfoxes.txt",path = paste0(output_dir,"Sturcture_IDsubset_groups.txt"))
allfoxes <- read.table("allfoxes.txt", header = FALSE, sep="\t", stringsAsFactors = FALSE)
SNP_names <- as.data.frame(allfoxes[2:4859,])
Individual_genotypes <- as.data.frame(allfoxes[4860:5054,])
library(reshape2)
colnames(Individual_genotypes) = 'Data'
New_Genotypes <- as.data.frame(Individual_genotypes[ ! Individual_genotypes$Data %in% c("pop"), ])
colnames(New_Genotypes) = 'Data'
write.table(New_Genotypes, file = "Genotype_File_for_Splitting.txt", row.names = FALSE, col.names = FALSE)
install.packages(genepopedit)
if (!require("devtools")) install.packages("devtools")
devtools::install_github("rystanley/genepopedit")
library(genepopedit)
genepop_structure(genepop="Genotype_File_for_Splitting.txt",path = paste0(output_dir,"Sturcture_IDsubset_groups.txt"))
library(genepopedit)
genepop_structure(genepop="Genotype_File_for_Splitting.txt",path = paste0(output_dir,"Sturcture_IDsubset_groups.txt"))
View(Individual_genotypes)
View(New_Genotypes)
genepop_structure(genepop="Genotype_File_for_Splitting.txt",path = paste0("~/Desktop/ClassProject/","Sturcture_IDsubset_groups.txt"))
GenePop <- read.table("allfoxes.txt",sep="\t",quote="",stringsAsFactors=FALSE)
output_dir <- "~/Documents/ClassProject/"
genepop_ID(genepop=GenePop, path=paste0(output_dir,"Genepop_SampleID_fixed.txt"))
data <- read.table("Structure_AllFoxes.txt", header = FALSE, sep="\t", stringsAsFactors = FALSE)
View(data)
View(Individual_genotypes)
View(data)
View(data)
View(allfoxes)
View(SNP_names)
